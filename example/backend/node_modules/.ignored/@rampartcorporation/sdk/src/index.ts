import jwt from 'jsonwebtoken';
import { RampartClientConfig, SsoTokenPayload } from './types.js';

export class RampartClient {
  private secret: string;

  constructor(config: RampartClientConfig) {
    if (!config.secret) {
      throw new Error('RampartClient requires a secret');
    }
    this.secret = config.secret;
  }

  /**
   * Generates a signed SSO token using the provided payload.
   */
  generateSsoToken(payload: SsoTokenPayload): string {
    // You can optionally provide jwt sign options here (e.g., expiresIn, etc.)
    const token = jwt.sign(payload, this.secret, {
      algorithm: 'HS256', 
      // expiresIn: '24h', // Example if you want to control expiration
    });
    return token;
  }
}